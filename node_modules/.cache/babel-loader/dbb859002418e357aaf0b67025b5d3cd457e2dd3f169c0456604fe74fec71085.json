{"ast":null,"code":"var _jsxFileName = \"/Users/carzard707/Documents/GitHub/carroway-react-test/src/pages/Home.tsx\",\n  _s = $RefreshSig$();\nimport { createRoute, useNavigate } from \"@tanstack/react-router\";\nimport { Route } from \"../routes/__root\";\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst HomePage = () => {\n  _s();\n  const [data, setData] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const navigate = useNavigate({\n    from: '/'\n  });\n  const fetchData = async () => {\n    setLoading(true);\n    setError(null);\n    try {\n      const response = await fetch('http://date.jsontest.com');\n      if (!response.ok) {\n        throw new Error('Network response was not ok');\n      }\n      const result = await response.json();\n      setData(result);\n    } catch (error) {\n      setError('Error fetching data');\n      console.error('Error fetching data:', error);\n    } finally {\n      setLoading(false);\n    }\n  };\n  const handleViewResult = () => {\n    navigate({\n      //@ts-ignore\n      to: '/result',\n      //@ts-ignore\n      search: {\n        data: JSON.stringify(data)\n      }\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flex flex-col items-center justify-center min-h-screen bg-gray-100 p-4\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"text-3xl font-bold mb-6 text-gray-800\",\n      children: \"React TanStack Router Example\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: fetchData,\n      disabled: loading,\n      className: \"bg-blue-500 text-white py-2 px-4 rounded-md hover:bg-blue-600 focus:outline-none focus:ring-2 focus:ring-blue-400 focus:ring-opacity-75 disabled:bg-blue-300 disabled:cursor-not-allowed\",\n      children: loading ? 'Loading...' : 'Fetch Data'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"!mt-4 text-red-500\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 17\n    }, this), data && !loading && /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleViewResult,\n      className: \"!mt-4 bg-green-500 text-white py-2 px-4 rounded-md hover:bg-green-600 focus:outline-none focus:ring-2 focus:ring-green-400 focus:ring-opacity-75\",\n      children: \"View Result\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n};\n_s(HomePage, \"jt6+Au3qNZPjIniHoLB2NEccCNA=\", false, function () {\n  return [useNavigate];\n});\n_c = HomePage;\nexport default HomePage;\nexport const homePageRoute = createRoute({\n  getParentRoute: () => Route,\n  path: \"/\",\n  component: HomePage\n});\nvar _c;\n$RefreshReg$(_c, \"HomePage\");","map":{"version":3,"names":["createRoute","useNavigate","Route","useState","jsxDEV","_jsxDEV","HomePage","_s","data","setData","loading","setLoading","error","setError","navigate","from","fetchData","response","fetch","ok","Error","result","json","console","handleViewResult","to","search","JSON","stringify","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","disabled","_c","homePageRoute","getParentRoute","path","component","$RefreshReg$"],"sources":["/Users/carzard707/Documents/GitHub/carroway-react-test/src/pages/Home.tsx"],"sourcesContent":["import { createRoute, useNavigate } from \"@tanstack/react-router\";\nimport { Route } from \"../routes/__root\";\nimport { useState } from \"react\";\n\n\nconst HomePage = () => {\n  const [data, setData] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState<any>(null);\n  const navigate = useNavigate({ from: '/' });\n\n  const fetchData = async () => {\n    setLoading(true);\n    setError(null);\n    try {\n      const response = await fetch('http://date.jsontest.com');\n      if (!response.ok) {\n        throw new Error('Network response was not ok');\n      }\n      const result = await response.json();\n      setData(result);\n    } catch (error) {\n      setError('Error fetching data');\n      console.error('Error fetching data:', error);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const handleViewResult = () => {\n    navigate({\n      //@ts-ignore\n      to: '/result',\n      //@ts-ignore\n      search: { data: JSON.stringify(data) }\n    });\n  };\n\n  return (\n    <div className=\"flex flex-col items-center justify-center min-h-screen bg-gray-100 p-4\">\n      <h1 className=\"text-3xl font-bold mb-6 text-gray-800\">React TanStack Router Example</h1>\n      <button\n        onClick={fetchData}\n        disabled={loading}\n        className=\"bg-blue-500 text-white py-2 px-4 rounded-md hover:bg-blue-600 focus:outline-none focus:ring-2 focus:ring-blue-400 focus:ring-opacity-75 disabled:bg-blue-300 disabled:cursor-not-allowed\"\n      >\n        {loading ? 'Loading...' : 'Fetch Data'}\n      </button>\n      {error && <p className=\"!mt-4 text-red-500\">{error}</p>}\n      {data && !loading && (\n        <button\n          onClick={handleViewResult}\n          className=\"!mt-4 bg-green-500 text-white py-2 px-4 rounded-md hover:bg-green-600 focus:outline-none focus:ring-2 focus:ring-green-400 focus:ring-opacity-75\"\n        >\n          View Result\n        </button>\n      )}\n    </div>\n  );\n};\n\nexport default HomePage;\nexport const homePageRoute = createRoute({\n  getParentRoute: () => Route,\n  path: \"/\",\n  component: HomePage\n});\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}