{"ast":null,"code":"import { useStore } from \"@tanstack/react-store\";\nimport { useRouter } from \"./useRouter.js\";\nfunction useRouterState(opts) {\n  const contextRouter = useRouter({\n    warn: (opts == null ? void 0 : opts.router) === void 0\n  });\n  return useStore(((opts == null ? void 0 : opts.router) || contextRouter).__store, opts == null ? void 0 : opts.select);\n}\nexport { useRouterState };","map":{"version":3,"names":["useRouterState","opts","contextRouter","useRouter","warn","router","useStore","__store","select"],"sources":["/Users/carzard707/Documents/GitHub/carroway-react-test/node_modules/@tanstack/react-router/src/useRouterState.tsx"],"sourcesContent":["import { useStore } from '@tanstack/react-store'\nimport { useRouter } from './useRouter'\nimport type { AnyRouter, RegisteredRouter, RouterState } from './router'\n\nexport function useRouterState<\n  TRouter extends AnyRouter = RegisteredRouter,\n  TSelected = RouterState<TRouter['routeTree']>,\n>(opts?: {\n  router?: TRouter\n  select: (state: RouterState<RegisteredRouter['routeTree']>) => TSelected\n}): TSelected {\n  const contextRouter = useRouter<TRouter>({\n    warn: opts?.router === undefined,\n  })\n  return useStore((opts?.router || contextRouter).__store, opts?.select as any)\n}\n"],"mappings":";;AAIO,SAASA,eAGdC,IAAA,EAGY;EACZ,MAAMC,aAAA,GAAgBC,SAAA,CAAmB;IACvCC,IAAA,GAAMH,IAAA,oBAAAA,IAAA,CAAMI,MAAA,MAAW;EAAA,CACxB;EACD,OAAOC,QAAA,GAAUL,IAAA,oBAAAA,IAAA,CAAMI,MAAA,KAAUH,aAAA,EAAeK,OAAA,EAASN,IAAA,oBAAAA,IAAA,CAAMO,MAAa;AAC9E","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}