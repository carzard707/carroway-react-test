{"ast":null,"code":"import { jsx } from \"react/jsx-runtime\";\nimport * as React from \"react\";\nimport warning from \"tiny-warning\";\nimport { useRouter } from \"./useRouter.js\";\nimport { defaultSerializeError } from \"./router.js\";\nimport { defer } from \"./defer.js\";\nimport { isServerSideError, defaultDeserializeError } from \"./isServerSideError.js\";\nfunction useAwaited({\n  promise: _promise\n}) {\n  var _a, _b;\n  const router = useRouter();\n  const promise = _promise;\n  defer(promise);\n  if (promise.status === \"pending\") {\n    throw promise;\n  }\n  if (promise.status === \"error\") {\n    if (typeof document !== \"undefined\") {\n      if (isServerSideError(promise.error)) {\n        throw (((_a = router.options.errorSerializer) == null ? void 0 : _a.deserialize) ?? defaultDeserializeError)(promise.error.data);\n      } else {\n        warning(false, \"Encountered a server-side error that doesn't fit the expected shape\");\n        throw promise.error;\n      }\n    } else {\n      throw {\n        data: (((_b = router.options.errorSerializer) == null ? void 0 : _b.serialize) ?? defaultSerializeError)(promise.error),\n        __isServerError: true\n      };\n    }\n  }\n  return [promise.data, promise];\n}\nfunction Await(props) {\n  const inner = /* @__PURE__ */jsx(AwaitInner, {\n    ...props\n  });\n  if (props.fallback) {\n    return /* @__PURE__ */jsx(React.Suspense, {\n      fallback: props.fallback,\n      children: inner\n    });\n  }\n  return inner;\n}\nfunction AwaitInner(props) {\n  const [data] = useAwaited(props);\n  return props.children(data);\n}\nexport { Await, useAwaited };","map":{"version":3,"names":["useAwaited","promise","_promise","router","useRouter","defer","status","document","isServerSideError","error","_a","options","errorSerializer","deserialize","defaultDeserializeError","data","warning","_b","serialize","defaultSerializeError","__isServerError","Await","props","inner","jsx","AwaitInner","fallback","React","Suspense","children"],"sources":["/Users/carzard707/Documents/GitHub/carroway-react-test/carroway-react-test/node_modules/@tanstack/react-router/src/awaited.tsx"],"sourcesContent":["import * as React from 'react'\nimport warning from 'tiny-warning'\nimport { useRouter } from './useRouter'\nimport { defaultSerializeError } from './router'\nimport { defer } from './defer'\nimport { defaultDeserializeError, isServerSideError } from './isServerSideError'\nimport type { DeferredPromise } from './defer'\n\nexport type AwaitOptions<T> = {\n  promise: Promise<T>\n}\n\nexport function useAwaited<T>({\n  promise: _promise,\n}: AwaitOptions<T>): [T, DeferredPromise<T>] {\n  const router = useRouter()\n  const promise = _promise as DeferredPromise<T>\n\n  defer(promise)\n\n  if (promise.status === 'pending') {\n    throw promise\n  }\n\n  if (promise.status === 'error') {\n    if (typeof document !== 'undefined') {\n      if (isServerSideError(promise.error)) {\n        throw (\n          router.options.errorSerializer?.deserialize ?? defaultDeserializeError\n        )(promise.error.data as any)\n      } else {\n        warning(\n          false,\n          \"Encountered a server-side error that doesn't fit the expected shape\",\n        )\n        throw promise.error\n      }\n    } else {\n      throw {\n        data: (\n          router.options.errorSerializer?.serialize ?? defaultSerializeError\n        )(promise.error),\n        __isServerError: true,\n      }\n    }\n  }\n\n  return [promise.data as any, promise]\n}\n\nexport function Await<T>(\n  props: AwaitOptions<T> & {\n    fallback?: React.ReactNode\n    children: (result: T) => React.ReactNode\n  },\n) {\n  const inner = <AwaitInner {...props} />\n  if (props.fallback) {\n    return <React.Suspense fallback={props.fallback}>{inner}</React.Suspense>\n  }\n  return inner\n}\n\nfunction AwaitInner<T>(\n  props: AwaitOptions<T> & {\n    fallback?: React.ReactNode\n    children: (result: T) => React.ReactNode\n  },\n): React.JSX.Element {\n  const [data] = useAwaited(props)\n  return props.children(data) as React.JSX.Element\n}\n"],"mappings":";;;;;;;AAYO,SAASA,WAAc;EAC5BC,OAAA,EAASC;AACX,GAA6C;;EAC3C,MAAMC,MAAA,GAASC,SAAA;EACf,MAAMH,OAAA,GAAUC,QAAA;EAEhBG,KAAA,CAAMJ,OAAO;EAET,IAAAA,OAAA,CAAQK,MAAA,KAAW,WAAW;IAC1B,MAAAL,OAAA;EACR;EAEI,IAAAA,OAAA,CAAQK,MAAA,KAAW,SAAS;IAC1B,WAAOC,QAAA,KAAa,aAAa;MAC/B,IAAAC,iBAAA,CAAkBP,OAAA,CAAQQ,KAAK,GAAG;QACpC,SACEC,EAAA,GAAAP,MAAA,CAAOQ,OAAA,CAAQC,eAAA,KAAf,gBAAAF,EAAA,CAAgCG,WAAA,KAAeC,uBAAA,EAC/Cb,OAAA,CAAQQ,KAAA,CAAMM,IAAW;MAAA,OACtB;QACLC,OAAA,CACE,OACA;QAEF,MAAMf,OAAA,CAAQQ,KAAA;MAChB;IAAA,OACK;MACC;QACJM,IAAA,KACEE,EAAA,GAAAd,MAAA,CAAOQ,OAAA,CAAQC,eAAA,KAAf,gBAAAK,EAAA,CAAgCC,SAAA,KAAaC,qBAAA,EAC7ClB,OAAA,CAAQQ,KAAK;QACfW,eAAA,EAAiB;MAAA;IAErB;EACF;EAEO,QAACnB,OAAA,CAAQc,IAAA,EAAad,OAAO;AACtC;AAEO,SAASoB,MACdC,KAAA,EAIA;EACA,MAAMC,KAAA,GAAQ,eAAAC,GAAA,CAACC,UAAA,EAAY;IAAA,GAAGH;EAAO;EACrC,IAAIA,KAAA,CAAMI,QAAA,EAAU;IAClB,sBAAAF,GAAA,CAAQG,KAAA,CAAMC,QAAA,EAAN;MAAeF,QAAA,EAAUJ,KAAA,CAAMI,QAAA;MAAWG,QAAA,EAAMN;IAAA;EAC1D;EACO,OAAAA,KAAA;AACT;AAEA,SAASE,WACPH,KAAA,EAImB;EACnB,MAAM,CAACP,IAAI,IAAIf,UAAA,CAAWsB,KAAK;EACxB,OAAAA,KAAA,CAAMO,QAAA,CAASd,IAAI;AAC5B","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}