{"ast":null,"code":"import { useRouterState } from \"./useRouterState.js\";\nfunction useLocation(opts) {\n  return useRouterState({\n    select: state => (opts == null ? void 0 : opts.select) ? opts.select(state.location) : state.location\n  });\n}\nexport { useLocation };","map":{"version":3,"names":["useLocation","opts","useRouterState","select","state","location"],"sources":["/Users/carzard707/Documents/GitHub/carroway-react/node_modules/@tanstack/react-router/src/useLocation.tsx"],"sourcesContent":["import { useRouterState } from './useRouterState'\nimport type { AnyRouter, RegisteredRouter, RouterState } from './router'\n\nexport function useLocation<\n  TRouter extends AnyRouter = RegisteredRouter,\n  TLocationState = RouterState<TRouter['routeTree']>['location'],\n  TSelected = TLocationState,\n>(opts?: { select?: (state: TLocationState) => TSelected }): TSelected {\n  return useRouterState({\n    select: (state) =>\n      opts?.select\n        ? opts.select(state.location as TLocationState)\n        : (state.location as TSelected),\n  })\n}\n"],"mappings":";AAGO,SAASA,YAIdC,IAAA,EAAqE;EACrE,OAAOC,cAAA,CAAe;IACpBC,MAAA,EAASC,KAAA,KACPH,IAAA,oBAAAA,IAAA,CAAME,MAAA,IACFF,IAAA,CAAKE,MAAA,CAAOC,KAAA,CAAMC,QAA0B,IAC3CD,KAAA,CAAMC;EAAA,CACd;AACH","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}