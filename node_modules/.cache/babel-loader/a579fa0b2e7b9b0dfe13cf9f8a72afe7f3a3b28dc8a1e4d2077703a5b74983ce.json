{"ast":null,"code":"import warning from \"tiny-warning\";\nimport { createRoute } from \"./route.js\";\nimport { useMatch } from \"./useMatch.js\";\nimport { useLoaderDeps } from \"./useLoaderDeps.js\";\nimport { useLoaderData } from \"./useLoaderData.js\";\nimport { useSearch } from \"./useSearch.js\";\nimport { useParams } from \"./useParams.js\";\nimport { useNavigate } from \"./useNavigate.js\";\nfunction createFileRoute(path) {\n  return new FileRoute(path, {\n    silent: true\n  }).createRoute;\n}\nclass FileRoute {\n  constructor(path, _opts) {\n    this.path = path;\n    this.createRoute = options => {\n      warning(this.silent, \"FileRoute is deprecated and will be removed in the next major version. Use the createFileRoute(path)(options) function instead.\");\n      const route = createRoute(options);\n      route.isRoot = false;\n      return route;\n    };\n    this.silent = _opts == null ? void 0 : _opts.silent;\n  }\n}\nfunction FileRouteLoader(_path) {\n  warning(false, `FileRouteLoader is deprecated and will be removed in the next major version. Please place the loader function in the the main route file, inside the \\`createFileRoute('/path/to/file')(options)\\` options`);\n  return loaderFn => loaderFn;\n}\nclass LazyRoute {\n  constructor(opts) {\n    this.useMatch = opts2 => {\n      return useMatch({\n        select: opts2 == null ? void 0 : opts2.select,\n        from: this.options.id\n      });\n    };\n    this.useRouteContext = opts2 => {\n      return useMatch({\n        from: this.options.id,\n        select: d => (opts2 == null ? void 0 : opts2.select) ? opts2.select(d.context) : d.context\n      });\n    };\n    this.useSearch = opts2 => {\n      return useSearch({\n        ...opts2,\n        from: this.options.id\n      });\n    };\n    this.useParams = opts2 => {\n      return useParams({\n        ...opts2,\n        from: this.options.id\n      });\n    };\n    this.useLoaderDeps = opts2 => {\n      return useLoaderDeps({\n        ...opts2,\n        from: this.options.id\n      });\n    };\n    this.useLoaderData = opts2 => {\n      return useLoaderData({\n        ...opts2,\n        from: this.options.id\n      });\n    };\n    this.useNavigate = () => {\n      return useNavigate({\n        from: this.options.id\n      });\n    };\n    this.options = opts;\n    this.$$typeof = Symbol.for(\"react.memo\");\n  }\n}\nfunction createLazyRoute(id) {\n  return opts => {\n    return new LazyRoute({\n      id,\n      ...opts\n    });\n  };\n}\nconst routeGroupPatternRegex = /\\(.+\\)/g;\nfunction removeGroups(s) {\n  return s.replaceAll(routeGroupPatternRegex, \"\").replaceAll(\"//\", \"/\");\n}\nfunction createLazyFileRoute(id) {\n  return opts => new LazyRoute({\n    id: removeGroups(id),\n    ...opts\n  });\n}\nexport { FileRoute, FileRouteLoader, LazyRoute, createFileRoute, createLazyFileRoute, createLazyRoute };","map":{"version":3,"names":["createFileRoute","path","FileRoute","silent","createRoute","constructor","_opts","options","warning","route","isRoot","FileRouteLoader","_path","loaderFn","LazyRoute","opts","useMatch","opts2","select","from","id","useRouteContext","d","context","useSearch","useParams","useLoaderDeps","useLoaderData","useNavigate","$$typeof","Symbol","for","createLazyRoute","routeGroupPatternRegex","removeGroups","s","replaceAll","createLazyFileRoute"],"sources":["/Users/carzard707/Documents/GitHub/carroway-react-test/carroway-react-test/node_modules/@tanstack/react-router/src/fileRoute.ts"],"sourcesContent":["import warning from 'tiny-warning'\nimport { createRoute } from './route'\nimport { useMatch } from './useMatch'\nimport { useLoaderDeps } from './useLoaderDeps'\nimport { useLoaderData } from './useLoaderData'\nimport { useSearch } from './useSearch'\nimport { useParams } from './useParams'\nimport { useNavigate } from './useNavigate'\nimport type { Constrain } from './utils'\nimport type {\n  AnyContext,\n  AnyPathParams,\n  AnyRoute,\n  AnySearchValidator,\n  FileBaseRouteOptions,\n  ResolveParams,\n  Route,\n  RouteConstraints,\n  RouteLoaderFn,\n  UpdatableRouteOptions,\n} from './route'\nimport type { MakeRouteMatch } from './Matches'\nimport type { RegisteredRouter } from './router'\nimport type { RouteById, RouteIds } from './routeInfo'\n\nexport interface FileRoutesByPath {\n  // '/': {\n  //   parentRoute: typeof rootRoute\n  // }\n}\n\nexport function createFileRoute<\n  TFilePath extends keyof FileRoutesByPath,\n  TParentRoute extends AnyRoute = FileRoutesByPath[TFilePath]['parentRoute'],\n  TId extends RouteConstraints['TId'] = FileRoutesByPath[TFilePath]['id'],\n  TPath extends RouteConstraints['TPath'] = FileRoutesByPath[TFilePath]['path'],\n  TFullPath extends\n    RouteConstraints['TFullPath'] = FileRoutesByPath[TFilePath]['fullPath'],\n>(\n  path: TFilePath,\n): FileRoute<TFilePath, TParentRoute, TId, TPath, TFullPath>['createRoute'] {\n  return new FileRoute<TFilePath, TParentRoute, TId, TPath, TFullPath>(path, {\n    silent: true,\n  }).createRoute\n}\n\n/** \n  @deprecated It's no longer recommended to use the `FileRoute` class directly.\n  Instead, use `createFileRoute('/path/to/file')(options)` to create a file route.\n*/\nexport class FileRoute<\n  TFilePath extends keyof FileRoutesByPath,\n  TParentRoute extends AnyRoute = FileRoutesByPath[TFilePath]['parentRoute'],\n  TId extends RouteConstraints['TId'] = FileRoutesByPath[TFilePath]['id'],\n  TPath extends RouteConstraints['TPath'] = FileRoutesByPath[TFilePath]['path'],\n  TFullPath extends\n    RouteConstraints['TFullPath'] = FileRoutesByPath[TFilePath]['fullPath'],\n> {\n  silent?: boolean\n\n  constructor(\n    public path: TFilePath,\n    _opts?: { silent: boolean },\n  ) {\n    this.silent = _opts?.silent\n  }\n\n  createRoute = <\n    TSearchValidator = undefined,\n    TParams = ResolveParams<TPath>,\n    TRouteContextFn = AnyContext,\n    TBeforeLoadFn = AnyContext,\n    TLoaderDeps extends Record<string, any> = {},\n    TLoaderFn = undefined,\n    TChildren = unknown,\n  >(\n    options?: FileBaseRouteOptions<\n      TParentRoute,\n      TPath,\n      TSearchValidator,\n      TParams,\n      TLoaderDeps,\n      TLoaderFn,\n      AnyContext,\n      TRouteContextFn,\n      TBeforeLoadFn\n    > &\n      UpdatableRouteOptions<\n        TParentRoute,\n        TId,\n        TFullPath,\n        TParams,\n        TSearchValidator,\n        TLoaderFn,\n        TLoaderDeps,\n        AnyContext,\n        TRouteContextFn,\n        TBeforeLoadFn\n      >,\n  ): Route<\n    TParentRoute,\n    TPath,\n    TFullPath,\n    TFilePath,\n    TId,\n    TSearchValidator,\n    TParams,\n    AnyContext,\n    TRouteContextFn,\n    TBeforeLoadFn,\n    TLoaderDeps,\n    TLoaderFn,\n    TChildren\n  > => {\n    warning(\n      this.silent,\n      'FileRoute is deprecated and will be removed in the next major version. Use the createFileRoute(path)(options) function instead.',\n    )\n    const route = createRoute(options as any)\n    ;(route as any).isRoot = false\n    return route as any\n  }\n}\n\n/** \n  @deprecated It's recommended not to split loaders into separate files.\n  Instead, place the loader function in the the main route file, inside the\n  `createFileRoute('/path/to/file)(options)` options.\n*/\nexport function FileRouteLoader<\n  TFilePath extends keyof FileRoutesByPath,\n  TRoute extends FileRoutesByPath[TFilePath]['preLoaderRoute'],\n>(\n  _path: TFilePath,\n): <TLoaderFn>(\n  loaderFn: Constrain<\n    TLoaderFn,\n    RouteLoaderFn<\n      TRoute['parentRoute'],\n      TRoute['types']['params'],\n      TRoute['types']['loaderDeps'],\n      TRoute['types']['routerContext'],\n      TRoute['types']['routeContextFn'],\n      TRoute['types']['beforeLoadFn']\n    >\n  >,\n) => TLoaderFn {\n  warning(\n    false,\n    `FileRouteLoader is deprecated and will be removed in the next major version. Please place the loader function in the the main route file, inside the \\`createFileRoute('/path/to/file')(options)\\` options`,\n  )\n  return (loaderFn) => loaderFn as any\n}\n\nexport type LazyRouteOptions = Pick<\n  UpdatableRouteOptions<\n    AnyRoute,\n    string,\n    string,\n    AnyPathParams,\n    AnySearchValidator,\n    {},\n    AnyContext,\n    AnyContext,\n    AnyContext,\n    AnyContext\n  >,\n  'component' | 'errorComponent' | 'pendingComponent' | 'notFoundComponent'\n>\n\nexport class LazyRoute<TRoute extends AnyRoute> {\n  options: {\n    id: string\n  } & LazyRouteOptions\n\n  constructor(\n    opts: {\n      id: string\n    } & LazyRouteOptions,\n  ) {\n    this.options = opts\n    ;(this as any).$$typeof = Symbol.for('react.memo')\n  }\n\n  useMatch = <\n    TRouteMatch = MakeRouteMatch<\n      RegisteredRouter['routeTree'],\n      TRoute['types']['id']\n    >,\n    TSelected = TRouteMatch,\n  >(opts?: {\n    select?: (match: TRouteMatch) => TSelected\n  }): TSelected => {\n    return useMatch({ select: opts?.select, from: this.options.id })\n  }\n\n  useRouteContext = <TSelected = TRoute['types']['allContext']>(opts?: {\n    select?: (s: TRoute['types']['allContext']) => TSelected\n  }): TSelected => {\n    return useMatch({\n      from: this.options.id,\n      select: (d: any) => (opts?.select ? opts.select(d.context) : d.context),\n    })\n  }\n\n  useSearch = <TSelected = TRoute['types']['fullSearchSchema']>(opts?: {\n    select?: (s: TRoute['types']['fullSearchSchema']) => TSelected\n  }): TSelected => {\n    return useSearch({ ...opts, from: this.options.id })\n  }\n\n  useParams = <TSelected = TRoute['types']['allParams']>(opts?: {\n    select?: (s: TRoute['types']['allParams']) => TSelected\n  }): TSelected => {\n    return useParams({ ...opts, from: this.options.id })\n  }\n\n  useLoaderDeps = <TSelected = TRoute['types']['loaderDeps']>(opts?: {\n    select?: (s: TRoute['types']['loaderDeps']) => TSelected\n  }): TSelected => {\n    return useLoaderDeps({ ...opts, from: this.options.id } as any)\n  }\n\n  useLoaderData = <TSelected = TRoute['types']['loaderData']>(opts?: {\n    select?: (s: TRoute['types']['loaderData']) => TSelected\n  }): TSelected => {\n    return useLoaderData({ ...opts, from: this.options.id } as any)\n  }\n\n  useNavigate = () => {\n    return useNavigate({ from: this.options.id })\n  }\n}\n\nexport function createLazyRoute<\n  TId extends RouteIds<RegisteredRouter['routeTree']>,\n  TRoute extends AnyRoute = RouteById<RegisteredRouter['routeTree'], TId>,\n>(id: TId) {\n  return (opts: LazyRouteOptions) => {\n    return new LazyRoute<TRoute>({ id: id as any, ...opts })\n  }\n}\n\nconst routeGroupPatternRegex = /\\(.+\\)/g\n\nfunction removeGroups(s: string) {\n  return s.replaceAll(routeGroupPatternRegex, '').replaceAll('//', '/')\n}\n\nexport function createLazyFileRoute<\n  TFilePath extends keyof FileRoutesByPath,\n  TRoute extends FileRoutesByPath[TFilePath]['preLoaderRoute'],\n>(id: TFilePath) {\n  return (opts: LazyRouteOptions) =>\n    new LazyRoute<TRoute>({ id: removeGroups(id), ...opts })\n}\n"],"mappings":";;;;;;;;AA+BO,SAASA,gBAQdC,IAAA,EAC0E;EACnE,WAAIC,SAAA,CAA0DD,IAAA,EAAM;IACzEE,MAAA,EAAQ;EACT,GAAEC,WAAA;AACL;AAMO,MAAMF,SAAA,CAOX;EAGAG,YACSJ,IAAA,EACPK,KAAA,EACA;IAFO,KAAAL,IAAA,GAAAA,IAAA;IAMT,KAAAG,WAAA,GASEG,OAAA,IAqCG;MACHC,OAAA,CACE,KAAKL,MAAA,EACL;MAEI,MAAAM,KAAA,GAAQL,WAAA,CAAYG,OAAc;MACtCE,KAAA,CAAcC,MAAA,GAAS;MAClB,OAAAD,KAAA;IAAA;IAxDP,KAAKN,MAAA,GAASG,KAAA,oBAAAA,KAAA,CAAOH,MAAA;EACvB;AAyDF;AAOO,SAASQ,gBAIdC,KAAA,EAaa;EACbJ,OAAA,CACE,OACA;EAEF,OAAQK,QAAA,IAAaA,QAAA;AACvB;AAkBO,MAAMC,SAAA,CAAmC;EAK9CT,YACEU,IAAA,EAGA;IAKF,KAAAC,QAAA,GAMEC,KAAA,IAEe;MACR,OAAAD,QAAA,CAAS;QAAEE,MAAA,EAAQD,KAAA,oBAAAA,KAAA,CAAMC,MAAA;QAAQC,IAAA,EAAM,KAAKZ,OAAA,CAAQa;MAAA,CAAI;IAAA;IAGjE,KAAAC,eAAA,GAA8DJ,KAAA,IAE7C;MACf,OAAOD,QAAA,CAAS;QACdG,IAAA,EAAM,KAAKZ,OAAA,CAAQa,EAAA;QACnBF,MAAA,EAASI,CAAA,KAAYL,KAAA,oBAAAA,KAAA,CAAMC,MAAA,IAASD,KAAA,CAAKC,MAAA,CAAOI,CAAA,CAAEC,OAAO,IAAID,CAAA,CAAEC;MAAA,CAChE;IAAA;IAGH,KAAAC,SAAA,GAA8DP,KAAA,IAE7C;MACR,OAAAO,SAAA,CAAU;QAAE,GAAGP,KAAA;QAAME,IAAA,EAAM,KAAKZ,OAAA,CAAQa;MAAA,CAAI;IAAA;IAGrD,KAAAK,SAAA,GAAuDR,KAAA,IAEtC;MACR,OAAAQ,SAAA,CAAU;QAAE,GAAGR,KAAA;QAAME,IAAA,EAAM,KAAKZ,OAAA,CAAQa;MAAA,CAAI;IAAA;IAGrD,KAAAM,aAAA,GAA4DT,KAAA,IAE3C;MACR,OAAAS,aAAA,CAAc;QAAE,GAAGT,KAAA;QAAME,IAAA,EAAM,KAAKZ,OAAA,CAAQa;MAAA,CAAW;IAAA;IAGhE,KAAAO,aAAA,GAA4DV,KAAA,IAE3C;MACR,OAAAU,aAAA,CAAc;QAAE,GAAGV,KAAA;QAAME,IAAA,EAAM,KAAKZ,OAAA,CAAQa;MAAA,CAAW;IAAA;IAGhE,KAAAQ,WAAA,GAAc,MAAM;MAClB,OAAOA,WAAA,CAAY;QAAET,IAAA,EAAM,KAAKZ,OAAA,CAAQa;MAAA,CAAI;IAAA;IAlD5C,KAAKb,OAAA,GAAUQ,IAAA;IACb,KAAac,QAAA,GAAWC,MAAA,CAAOC,GAAA,CAAI,YAAY;EACnD;AAkDF;AAEO,SAASC,gBAGdZ,EAAA,EAAS;EACT,OAAQL,IAAA,IAA2B;IACjC,OAAO,IAAID,SAAA,CAAkB;MAAEM,EAAA;MAAe,GAAGL;IAAM;EAAA;AAE3D;AAEA,MAAMkB,sBAAA,GAAyB;AAE/B,SAASC,aAAaC,CAAA,EAAW;EAC/B,OAAOA,CAAA,CAAEC,UAAA,CAAWH,sBAAA,EAAwB,EAAE,EAAEG,UAAA,CAAW,MAAM,GAAG;AACtE;AAEO,SAASC,oBAGdjB,EAAA,EAAe;EACR,OAACL,IAAA,IACN,IAAID,SAAA,CAAkB;IAAEM,EAAA,EAAIc,YAAA,CAAad,EAAE;IAAG,GAAGL;EAAA,CAAM;AAC3D","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}