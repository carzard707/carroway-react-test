{"ast":null,"code":"import { createBrowserHistory, createHashHistory, createHistory, createMemoryHistory } from \"@tanstack/history\";\nimport { default as default2 } from \"tiny-invariant\";\nimport { default as default3 } from \"tiny-warning\";\nimport { Await, useAwaited } from \"./awaited.js\";\nimport { ScriptOnce } from \"./ScriptOnce.js\";\nimport { defer } from \"./defer.js\";\nimport { CatchBoundary, ErrorComponent } from \"./CatchBoundary.js\";\nimport { FileRoute, FileRouteLoader, LazyRoute, createFileRoute, createLazyFileRoute, createLazyRoute } from \"./fileRoute.js\";\nimport { lazyRouteComponent } from \"./lazyRouteComponent.js\";\nimport { Link, createLink, useLinkProps } from \"./link.js\";\nimport { MatchRoute, Matches, isMatch, useChildMatches, useMatchRoute, useMatches, useParentMatches } from \"./Matches.js\";\nimport { matchContext } from \"./matchContext.js\";\nimport { Match, Outlet } from \"./Match.js\";\nimport { defaultDeserializeError, isServerSideError } from \"./isServerSideError.js\";\nimport { useMatch } from \"./useMatch.js\";\nimport { useLoaderDeps } from \"./useLoaderDeps.js\";\nimport { useLoaderData } from \"./useLoaderData.js\";\nimport { cleanPath, interpolatePath, joinPaths, matchByPath, matchPathname, parsePathname, removeBasepath, resolvePath, trimPath, trimPathLeft, trimPathRight } from \"./path.js\";\nimport { decode, encode } from \"./qss.js\";\nimport { isRedirect, redirect } from \"./redirects.js\";\nimport { rootRouteId } from \"./root.js\";\nimport { NotFoundRoute, RootRoute, Route, RouteApi, createRootRoute, createRootRouteWithContext, createRoute, createRouteMask, getRouteApi, rootRouteWithContext } from \"./route.js\";\nimport { PathParamError, Router, SearchParamError, componentTypes, createRouter, defaultSerializeError, getInitialRouterState, lazyFn } from \"./router.js\";\nimport { RouterContextProvider, RouterProvider } from \"./RouterProvider.js\";\nimport { ScrollRestoration, useElementScrollRestoration, useScrollRestoration } from \"./scroll-restoration.js\";\nimport { defaultParseSearch, defaultStringifySearch, parseSearchWith, stringifySearchWith } from \"./searchParams.js\";\nimport { defaultTransformer } from \"./transformer.js\";\nimport { Block, useBlocker } from \"./useBlocker.js\";\nimport { Navigate, useNavigate } from \"./useNavigate.js\";\nimport { useParams } from \"./useParams.js\";\nimport { useSearch } from \"./useSearch.js\";\nimport { getRouterContext } from \"./routerContext.js\";\nimport { useRouteContext } from \"./useRouteContext.js\";\nimport { useRouter } from \"./useRouter.js\";\nimport { useRouterState } from \"./useRouterState.js\";\nimport { useLocation } from \"./useLocation.js\";\nimport { createControlledPromise, deepEqual, escapeJSON, functionalUpdate, isPlainArray, isPlainObject, pick, replaceEqualDeep, shallow, useLayoutEffect, useStableCallback } from \"./utils.js\";\nimport { CatchNotFound, DefaultGlobalNotFound, isNotFound, notFound } from \"./not-found.js\";\nexport { Await, Block, CatchBoundary, CatchNotFound, DefaultGlobalNotFound, ErrorComponent, FileRoute, FileRouteLoader, LazyRoute, Link, Match, MatchRoute, Matches, Navigate, NotFoundRoute, Outlet, PathParamError, RootRoute, Route, RouteApi, Router, RouterContextProvider, RouterProvider, ScriptOnce, ScrollRestoration, SearchParamError, cleanPath, componentTypes, createBrowserHistory, createControlledPromise, createFileRoute, createHashHistory, createHistory, createLazyFileRoute, createLazyRoute, createLink, createMemoryHistory, createRootRoute, createRootRouteWithContext, createRoute, createRouteMask, createRouter, decode, deepEqual, defaultDeserializeError, defaultParseSearch, defaultSerializeError, defaultStringifySearch, defaultTransformer, defer, encode, escapeJSON, functionalUpdate, getInitialRouterState, getRouteApi, getRouterContext, interpolatePath, default2 as invariant, isMatch, isNotFound, isPlainArray, isPlainObject, isRedirect, isServerSideError, joinPaths, lazyFn, lazyRouteComponent, matchByPath, matchContext, matchPathname, notFound, parsePathname, parseSearchWith, pick, redirect, removeBasepath, replaceEqualDeep, resolvePath, rootRouteId, rootRouteWithContext, shallow, stringifySearchWith, trimPath, trimPathLeft, trimPathRight, useAwaited, useBlocker, useChildMatches, useElementScrollRestoration, useLayoutEffect, useLinkProps, useLoaderData, useLoaderDeps, useLocation, useMatch, useMatchRoute, useMatches, useNavigate, useParams, useParentMatches, useRouteContext, useRouter, useRouterState, useScrollRestoration, useSearch, useStableCallback, default3 as warning };","map":{"version":3,"names":[],"sources":[],"sourcesContent":["import { createBrowserHistory, createHashHistory, createHistory, createMemoryHistory } from \"@tanstack/history\";\nimport { default as default2 } from \"tiny-invariant\";\nimport { default as default3 } from \"tiny-warning\";\nimport { Await, useAwaited } from \"./awaited.js\";\nimport { ScriptOnce } from \"./ScriptOnce.js\";\nimport { defer } from \"./defer.js\";\nimport { CatchBoundary, ErrorComponent } from \"./CatchBoundary.js\";\nimport { FileRoute, FileRouteLoader, LazyRoute, createFileRoute, createLazyFileRoute, createLazyRoute } from \"./fileRoute.js\";\nimport { lazyRouteComponent } from \"./lazyRouteComponent.js\";\nimport { Link, createLink, useLinkProps } from \"./link.js\";\nimport { MatchRoute, Matches, isMatch, useChildMatches, useMatchRoute, useMatches, useParentMatches } from \"./Matches.js\";\nimport { matchContext } from \"./matchContext.js\";\nimport { Match, Outlet } from \"./Match.js\";\nimport { defaultDeserializeError, isServerSideError } from \"./isServerSideError.js\";\nimport { useMatch } from \"./useMatch.js\";\nimport { useLoaderDeps } from \"./useLoaderDeps.js\";\nimport { useLoaderData } from \"./useLoaderData.js\";\nimport { cleanPath, interpolatePath, joinPaths, matchByPath, matchPathname, parsePathname, removeBasepath, resolvePath, trimPath, trimPathLeft, trimPathRight } from \"./path.js\";\nimport { decode, encode } from \"./qss.js\";\nimport { isRedirect, redirect } from \"./redirects.js\";\nimport { rootRouteId } from \"./root.js\";\nimport { NotFoundRoute, RootRoute, Route, RouteApi, createRootRoute, createRootRouteWithContext, createRoute, createRouteMask, getRouteApi, rootRouteWithContext } from \"./route.js\";\nimport { PathParamError, Router, SearchParamError, componentTypes, createRouter, defaultSerializeError, getInitialRouterState, lazyFn } from \"./router.js\";\nimport { RouterContextProvider, RouterProvider } from \"./RouterProvider.js\";\nimport { ScrollRestoration, useElementScrollRestoration, useScrollRestoration } from \"./scroll-restoration.js\";\nimport { defaultParseSearch, defaultStringifySearch, parseSearchWith, stringifySearchWith } from \"./searchParams.js\";\nimport { defaultTransformer } from \"./transformer.js\";\nimport { Block, useBlocker } from \"./useBlocker.js\";\nimport { Navigate, useNavigate } from \"./useNavigate.js\";\nimport { useParams } from \"./useParams.js\";\nimport { useSearch } from \"./useSearch.js\";\nimport { getRouterContext } from \"./routerContext.js\";\nimport { useRouteContext } from \"./useRouteContext.js\";\nimport { useRouter } from \"./useRouter.js\";\nimport { useRouterState } from \"./useRouterState.js\";\nimport { useLocation } from \"./useLocation.js\";\nimport { createControlledPromise, deepEqual, escapeJSON, functionalUpdate, isPlainArray, isPlainObject, pick, replaceEqualDeep, shallow, useLayoutEffect, useStableCallback } from \"./utils.js\";\nimport { CatchNotFound, DefaultGlobalNotFound, isNotFound, notFound } from \"./not-found.js\";\nexport {\n  Await,\n  Block,\n  CatchBoundary,\n  CatchNotFound,\n  DefaultGlobalNotFound,\n  ErrorComponent,\n  FileRoute,\n  FileRouteLoader,\n  LazyRoute,\n  Link,\n  Match,\n  MatchRoute,\n  Matches,\n  Navigate,\n  NotFoundRoute,\n  Outlet,\n  PathParamError,\n  RootRoute,\n  Route,\n  RouteApi,\n  Router,\n  RouterContextProvider,\n  RouterProvider,\n  ScriptOnce,\n  ScrollRestoration,\n  SearchParamError,\n  cleanPath,\n  componentTypes,\n  createBrowserHistory,\n  createControlledPromise,\n  createFileRoute,\n  createHashHistory,\n  createHistory,\n  createLazyFileRoute,\n  createLazyRoute,\n  createLink,\n  createMemoryHistory,\n  createRootRoute,\n  createRootRouteWithContext,\n  createRoute,\n  createRouteMask,\n  createRouter,\n  decode,\n  deepEqual,\n  defaultDeserializeError,\n  defaultParseSearch,\n  defaultSerializeError,\n  defaultStringifySearch,\n  defaultTransformer,\n  defer,\n  encode,\n  escapeJSON,\n  functionalUpdate,\n  getInitialRouterState,\n  getRouteApi,\n  getRouterContext,\n  interpolatePath,\n  default2 as invariant,\n  isMatch,\n  isNotFound,\n  isPlainArray,\n  isPlainObject,\n  isRedirect,\n  isServerSideError,\n  joinPaths,\n  lazyFn,\n  lazyRouteComponent,\n  matchByPath,\n  matchContext,\n  matchPathname,\n  notFound,\n  parsePathname,\n  parseSearchWith,\n  pick,\n  redirect,\n  removeBasepath,\n  replaceEqualDeep,\n  resolvePath,\n  rootRouteId,\n  rootRouteWithContext,\n  shallow,\n  stringifySearchWith,\n  trimPath,\n  trimPathLeft,\n  trimPathRight,\n  useAwaited,\n  useBlocker,\n  useChildMatches,\n  useElementScrollRestoration,\n  useLayoutEffect,\n  useLinkProps,\n  useLoaderData,\n  useLoaderDeps,\n  useLocation,\n  useMatch,\n  useMatchRoute,\n  useMatches,\n  useNavigate,\n  useParams,\n  useParentMatches,\n  useRouteContext,\n  useRouter,\n  useRouterState,\n  useScrollRestoration,\n  useSearch,\n  useStableCallback,\n  default3 as warning\n};\n"],"mappings":"","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}